// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  username String   @unique
  name     String
  password String
  profile  String   @default("https://res.cloudinary.com/dri5u2nqb/image/upload/v1713511395/zrtp9p7eote4ixokmwjx.jpg")
  Chats    Chat[]
  GroupChats GroupChat[]
  }

model Chat {
  id        String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userID    String
  fromUserId String
  user      User @relation(fields: [userID], references: [id])
  messages  Messages[]
}

model GroupChat {
  id        String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  profile   String 
  users     User[]
  messages  GroupMessages[]
}


model Messages {
  id        String @id @default(cuid())
  message   String
  createdAt DateTime @default(now())
  fromUser  String
  toUser    String 
  ChatId    String
  chat      Chat @relation(fields: [ChatId], references: [id])
  Status    String @default("sent")
}

model GroupMessages {
  id        String @id @default(cuid())
  message   String
  createdAt DateTime @default(now())
  fromUser  String
  GroupChatId String
  groupChat GroupChat @relation(fields: [GroupChatId], references: [id])
}
